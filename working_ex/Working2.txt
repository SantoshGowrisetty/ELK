=============================================
#creating index specifying shards and replicas
PUT /ecommerce
{
  "settings": {
    "number_of_shards": 1
    , "number_of_replicas": 2
    , "auto_expand_replicas": false
  }
}

#1
changing settings of already created index

PUT /ecommerce/_settings
{
"index":{
  "number_of_replicas":1,
  "auto_expand_replicas": false
}
}

#trying to update shards after index is created:
PUT /ecommerce/_settings
{
"index":{
  "number_of_shards":3
}
}

results in error:
{
  "error" : {
    "root_cause" : [
      {
        "type" : "illegal_argument_exception",
        "reason" : "Can't update non dynamic settings [[index.number_of_shards]] for open indices [[ecommerce/woiDb4aYQ9mBoi9MhhhinQ]]"
      }
    ],
    "type" : "illegal_argument_exception",
    "reason" : "Can't update non dynamic settings [[index.number_of_shards]] for open indices [[ecommerce/woiDb4aYQ9mBoi9MhhhinQ]]"
  },
  "status" : 400
}

#checking specific i.e. our index
GET /_cat/indices/ecommerce?v

#checking shard allocation
GET /_cat/shards/ecommerce?v

---------------------
#Add Mappings to ecommerce Index
#type string is removed in newer versions of ES

PUT /ecommerce2
{
     "mappings": {
                "properties": {
             "name": {
                "type": "text"
         },
         "price": {
           "type": "double"
         },
         "description": {
            "type": "text"
         },
         "status": {
            "type": "text"
         },
         "quantity": {
           "type": "integer"
         },
         "categories": {
            "type": "nested",
            "properties": {
              "name": {
                "type": "text"
          }
         }
        },
        "tags": {
           "type": "text"
         }

}
}
}

#getting details of index
GET /ecommerce
GET /ecommerce2

GET /_cat/indices?v
GET /_cat/shards

#creating index with defaults
PUT ecommerce3
{
}
GET ecommerce3
GET /_cat/shards/ecommerce3?v
DELETE ecommerce3

#checking indexes
GET /_cat/indices/ecommer*?v
--------------------
#checking other details
GET /_cat/shards/ecommerce?h=index,shard,prirep,dc,state,node,unassigned.reason?v

GET /_cat/shards/ecommerce2?h=index,shard,prirep,dc,node,segments.count

GET /_cat/indices?v

GET /_cat/indices?bytes=b&s=store.size:desc&v

GET /_cat/indices?help

GET /_cat/indices?s=store.size:desc&format=json&v

--------------------
#Adding Documents
5.
PUT /ecommerce/_doc/1001
{
  "name": "Test Frameowrk",
  "price": "30.00",
  "description": "For processing data",
  "status": "active",
  "quantity": 1,
  "categories": [
    {"name": "Software"}],
    "tags": ["Test framework","logstash","nagios"]
}

#to verify is this worked
GET ecommerce/_search
{
    "query": {
        "match_all": {}
    }
}

OR

#to verify if this worked
#Click on 'Management>Index Patterns> and create an index pattern'. [Just enter your index name]
#Now click on 'discover' and in search(on top) ,search for a document

#trying to update
PUT /ecommerce/_doc/1001
{
  "name": "Test Framework"
}

#checking ecommerce
GET ecommerce/_search
{
    "query": {
        "match_all": {}
    }
}

#notice as per above command all other key-values were deleted.
#delete the document
DELETE /ecommerce/_doc/1001

=============================================
#insert the document again
PUT /ecommerce/_doc/1001
{
  "name": "Test Framework",
  "price": "30.00",
  "description": "For processing data",
  "status": "active",
  "quantity": 1,
  "categories": [
    {"name": "Software"}],
    "tags": ["Test framework","logstash","nagios"]
}

GET ecommerce/_search
{
    "query": {
        "match_all": {}
    }
}


#Replacing a document
#Using post and specifying specific key
OST /ecommerce/_doc/1001/_update
{
  "doc": {
    "price": 500.00
  }
}

POST /ecommerce/_update/1001/
{
  "doc": {
    "price": 501.00
  }
}

#using put to update the value(will find and replace based on ID or insert new document)
6.

PUT /ecommerce/_doc/1001
{
  "name": "Test Framework",
  "price": "300.00",
  "description": "For processing data",
  "status": "active",
  "quantity": 1,
  "categories": [
    {"name": "Software"}],
    "tags": ["Test framework","logstash","nagios"]
}

#check from discover kibana
tags:
    Test framework, logstash, nagios
name:
    Test Frameowrk
price:
    300
description:
    For processing data
status:
    active
quantity:
    1
categories:
    { "name": "Software" }
_id:
    1001
_index:
    ecommerce
_score:
    0.288 

===========================================

#updating 1 more document
PUT /ecommerce/_doc/1004
{
  "name": "Test ",
  "price": "30.00",
  "description": "Ingesting data",
  "status": "active",
  "quantity": 1,
  "categories": [
    {"name": "components"}],
    "tags": ["metricbeat","logstash","filebeat"]
}

